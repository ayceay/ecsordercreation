{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "ECS API",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:5002/"
    },
    {
      "url": "https://localhost:5002/"
    }
  ],
  "tags": [
    {
      "name": "Ecs",
      "description": "Endpoints"
    }
  ],
  "paths": {
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Login user.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Error retrieving User with username..."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Authentication"
              }
            }
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create new user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while creating the User..."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete all user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Some error occurred while removing all Users..."
          }
        }
      }
    },
    "/users/queryPage": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Get all users as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get users data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FindAll"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/FindAll"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Some error occurred while retrieving users..."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Query"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Error retrieving User..."
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update new user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Error updating User..."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Could not delete User..."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          },
          "surname": {
            "type": "string",
            "example": "req.body.surname"
          },
          "username": {
            "type": "string",
            "example": "req.body.username"
          },
          "password": {
            "type": "string",
            "example": "req.body.password"
          }
        },
        "required": [
          "name",
          "surname",
          "username"
        ],
        "xml": {
          "name": "User"
        }
      },
      "FindAll": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "example": "array"
              },
              "allOf": {
                "type": "array",
                "items": {
                  "type": "array",
                  "items": {}
                }
              }
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "FindAll"
        }
      },
      "Authentication": {
        "type": "object",
        "properties": {
          "surname": {
            "type": "string",
            "example": "req.body.surname"
          },
          "password": {
            "type": "string",
            "example": "req.body.password"
          }
        },
        "xml": {
          "name": "Authentication"
        }
      },
      "Query": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "xml": {
              "name": "user"
            },
            "$ref": "#/components/schemas/User"
          }
        },
        "xml": {
          "name": "Query"
        }
      }
    }
  }
}
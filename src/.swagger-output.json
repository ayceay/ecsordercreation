{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "ECS API",
    "description": ""
  },
  "servers": [
    {
      "url": "http://localhost:5002/"
    },
    {
      "url": "https://localhost:5002/"
    }
  ],
  "tags": [
    {
      "name": "Ecs",
      "description": "Endpoints"
    }
  ],
  "paths": {
    "/users/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create new user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Some error occurred while creating the User..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete all user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Some error occurred while removing all Users..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Login user.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Error retrieving User with username..."
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Authentication"
              }
            }
          }
        }
      }
    },
    "/users/password-change": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Update user password.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User password has been changed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "password": "password"
            }
          }
        }
      }
    },
    "/users/queryPage": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Get all users as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get users data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/UserPaginationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving users..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserQueryModel"
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "Update new user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating User..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Delete user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Could not delete User..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product-groups/": {
      "post": {
        "tags": [
          "Product Group"
        ],
        "description": "Create new product group.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Some error occurred while creating the Product Group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroup"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product Group"
        ],
        "description": "Delete all product group.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while removing all product groups..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product-groups/queryPage": {
      "post": {
        "tags": [
          "Product Group"
        ],
        "description": "Get all product group as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get product groups data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupPaginationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroupPaginationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving product groups..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroupQuery"
              }
            }
          }
        }
      }
    },
    "/product-groups/findAll": {
      "get": {
        "tags": [
          "Product Group"
        ],
        "description": "Get all product group.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all product group data ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroup"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductGroup"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving product groups..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/product-groups/{id}": {
      "get": {
        "tags": [
          "Product Group"
        ],
        "description": "Get specific product group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product Group has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductGroup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error retrieving product group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product Group"
        ],
        "description": "Update new product group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating Product Group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductGroup"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product Group"
        ],
        "description": "Delete product group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Could not delete Product Group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Create new product.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Some error occurred while creating the Product..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Delete all product.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while removing all products..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/queryPage": {
      "post": {
        "tags": [
          "Product"
        ],
        "description": "Get all product as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get product data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPaginationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ProductPaginationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving product..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductQuery"
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "description": "Get specific product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error retrieving product..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Update product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating Product..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "description": "Delete product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Could not delete Product..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/products/qrcode/{id}": {
      "put": {
        "tags": [
          "Product"
        ],
        "description": "Update product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating Product qr code..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customer-groups/": {
      "post": {
        "tags": [
          "Customer Group"
        ],
        "description": "Create new customer group.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Some error occurred while creating the Customer Group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Group"
        ],
        "description": "Delete all customer group.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while removing all customer groups..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customer-groups/queryPage": {
      "post": {
        "tags": [
          "Customer Group"
        ],
        "description": "Get all customer group as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get customer groups data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroupPaginationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroupPaginationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving customer groups..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroupQuery"
              }
            }
          }
        }
      }
    },
    "/customer-groups/findAll": {
      "get": {
        "tags": [
          "Customer Group"
        ],
        "description": "Get all customer group.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all customer group data ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CustomerGroup"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving customer groups..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customer-groups/{id}": {
      "get": {
        "tags": [
          "Customer Group"
        ],
        "description": "Get specific customer group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer Group has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerGroup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error retrieving customer group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customer Group"
        ],
        "description": "Update new customer group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating Customer Group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerGroup"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer Group"
        ],
        "description": "Delete customer group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Could not delete Customer Group..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/": {
      "post": {
        "tags": [
          "Customer"
        ],
        "description": "Create new customer.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Some error occurred while creating the Customer..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "description": "Delete all customer.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while removing all customers..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/customers/queryPage": {
      "post": {
        "tags": [
          "Customer"
        ],
        "description": "Get all customer as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get customer data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/CustomerPaginationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving customer..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomerQuery"
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "description": "Get specific customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Customer has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Customer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error retrieving customer..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "description": "Update customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating Customer..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customer"
        ],
        "description": "Delete customer.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Could not delete Customer..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Create new order.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Some error occurred while creating the Order..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete all order.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while removing all orders..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/queryPage": {
      "post": {
        "tags": [
          "Order"
        ],
        "description": "Get all order as paginated.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get orders data as paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPaginationModel"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/OrderPaginationModel"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving orders..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderQuery"
              }
            }
          }
        }
      }
    },
    "/orders/findAll": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get all order.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "get all order data ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Order"
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Some error occurred while retrieving orders..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Order"
        ],
        "description": "Get specific order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order has been founded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Error retrieving order..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Order"
        ],
        "description": "Update new order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Error updating Order..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order"
        ],
        "description": "Delete order.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Could not delete Order..."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          },
          "surname": {
            "type": "string",
            "example": "req.body.surname"
          },
          "username": {
            "type": "string",
            "example": "req.body.username"
          },
          "password": {
            "type": "string",
            "example": "req.body.password"
          }
        },
        "required": [
          "name",
          "surname",
          "username"
        ],
        "xml": {
          "name": "User"
        }
      },
      "UserPaginationModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "UserPaginationModel"
        }
      },
      "Authentication": {
        "type": "object",
        "properties": {
          "surname": {
            "type": "string",
            "example": "req.body.surname"
          },
          "password": {
            "type": "string",
            "example": "req.body.password"
          }
        },
        "xml": {
          "name": "Authentication"
        }
      },
      "UserQueryModel": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              },
              "surname": {
                "type": "string",
                "example": "-"
              },
              "username": {
                "type": "string",
                "example": "-"
              }
            }
          }
        },
        "xml": {
          "name": "UserQueryModel"
        }
      },
      "ProductGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          }
        },
        "xml": {
          "name": "ProductGroup"
        }
      },
      "ProductGroupQuery": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              }
            }
          }
        },
        "xml": {
          "name": "ProductGroupQuery"
        }
      },
      "ProductGroupPaginationModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "ProductGroupPaginationModel"
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          },
          "price": {
            "type": "string",
            "example": "req.body.price"
          },
          "max_discount": {
            "type": "string",
            "example": "req.body.max_discount"
          },
          "product_group_id": {
            "type": "string",
            "example": "req.body.product_group_id"
          },
          "product_group": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              }
            }
          }
        },
        "required": [
          "product_group_id"
        ],
        "xml": {
          "name": "Product"
        }
      },
      "ProductPaginationModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "ProductPaginationModel"
        }
      },
      "ProductQuery": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "filter"
        ],
        "xml": {
          "name": "ProductQuery"
        }
      },
      "CustomerGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          },
          "max_discount": {
            "type": "string",
            "example": "req.body.max_discount"
          }
        },
        "xml": {
          "name": "CustomerGroup"
        }
      },
      "CustomerGroupPaginationModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "CustomerGroupPaginationModel"
        }
      },
      "CustomerGroupQuery": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "filter"
        ],
        "xml": {
          "name": "CustomerGroupQuery"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          },
          "surname": {
            "type": "string",
            "example": "req.body.surname"
          },
          "phone": {
            "type": "string",
            "example": "req.body.phone"
          },
          "address": {
            "type": "string",
            "example": "req.body.address"
          }
        },
        "xml": {
          "name": "Customer"
        }
      },
      "CustomerPaginationModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "CustomerPaginationModel"
        }
      },
      "CustomerQuery": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              },
              "surname": {
                "type": "string",
                "example": "-"
              },
              "phone": {
                "type": "string",
                "example": "-"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "filter"
        ],
        "xml": {
          "name": "CustomerQuery"
        }
      },
      "OrderDetail": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "discounted_price": {
            "type": "string",
            "example": "req.body.discounted_price"
          },
          "discount": {
            "type": "string",
            "example": "req.body.discount"
          },
          "quantity": {
            "type": "string",
            "example": "req.body.quantity"
          },
          "product_id": {
            "type": "string",
            "example": "req.body.product_id"
          }
        },
        "xml": {
          "name": "OrderDetail"
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "changed_by": {
            "type": "string",
            "example": "-"
          },
          "created_at": {
            "type": "string",
            "example": "Date.now"
          },
          "updated_at": {
            "type": "string",
            "example": "null"
          },
          "name": {
            "type": "string",
            "example": "req.body.name"
          },
          "orderDetails": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          }
        },
        "xml": {
          "name": "Order"
        }
      },
      "OrderPaginationModel": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number",
            "example": 3
          },
          "tutorials": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {}
            }
          },
          "totalPages": {
            "type": "number",
            "example": 1
          },
          "currentPage": {
            "type": "number",
            "example": 0
          }
        },
        "xml": {
          "name": "OrderPaginationModel"
        }
      },
      "OrderQuery": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1
          },
          "size": {
            "type": "number",
            "example": 1
          },
          "filter": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "-"
              }
            },
            "required": [
              "name"
            ]
          }
        },
        "required": [
          "filter"
        ],
        "xml": {
          "name": "OrderQuery"
        }
      }
    }
  }
}